$date
	Sat Nov 07 15:18:05 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! zero $end
$var wire 1 " carry $end
$var wire 4 # buffer2 [3:0] $end
$var reg 4 $ buffer1 [3:0] $end
$var reg 1 % clock $end
$var reg 1 & enF $end
$var reg 1 ' enb1 $end
$var reg 1 ( enb2 $end
$var reg 1 ) reset $end
$var reg 3 * s [2:0] $end
$scope module MF $end
$var wire 4 + buffer1 [3:0] $end
$var wire 1 % clock $end
$var wire 1 & enF $end
$var wire 1 ' enb1 $end
$var wire 1 ( enb2 $end
$var wire 1 ) reset $end
$var wire 3 , s [2:0] $end
$var wire 1 ! zero $end
$var wire 1 " carry $end
$var wire 4 - buffer2 [3:0] $end
$var wire 4 . OUT [3:0] $end
$var wire 4 / B [3:0] $end
$var wire 4 0 A [3:0] $end
$scope module ALU $end
$var wire 3 1 s [2:0] $end
$var wire 1 ! Zero $end
$var wire 4 2 B [3:0] $end
$var wire 4 3 A [3:0] $end
$var reg 1 " C $end
$var reg 4 4 OUT [3:0] $end
$upscope $end
$scope module accu $end
$var wire 4 5 D [3:0] $end
$var wire 1 % clock $end
$var wire 1 & en $end
$var wire 1 ) reset $end
$var reg 4 6 Q [3:0] $end
$upscope $end
$scope module b1 $end
$var wire 1 ' enable $end
$var wire 4 7 in [3:0] $end
$var wire 4 8 out [3:0] $end
$upscope $end
$scope module b2 $end
$var wire 1 ( enable $end
$var wire 4 9 in [3:0] $end
$var wire 4 : out [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
x)
x(
x'
x&
x%
bx $
bx #
x"
x!
$end
#1
0"
bz #
bz -
bz :
bz /
bz 2
bz 8
b0 *
b0 ,
b0 1
b0 $
b0 +
b0 7
0(
0%
0'
0&
0)
#2
1!
b0 .
b0 4
b0 5
b0 9
b0 0
b0 3
b0 6
1)
#3
0)
#5
1%
#10
0%
#12
b1111 /
b1111 2
b1111 8
b1111 $
b1111 +
b1111 7
1'
1&
#15
1%
#20
0%
#21
0!
b1111 .
b1111 4
b1111 5
b1111 9
b1111 #
b1111 -
b1111 :
b10 *
b10 ,
b10 1
1(
#25
b1111 0
b1111 3
b1111 6
1%
#30
1!
b0 #
b0 -
b0 :
b0 .
b0 4
b0 5
b0 9
0%
b1 *
b1 ,
b1 1
#35
0!
b1 #
b1 -
b1 :
1"
b1 .
b1 4
b1 5
b1 9
b0 0
b0 3
b0 6
1%
#39
b1111 #
b1111 -
b1111 :
0"
b1111 .
b1111 4
b1111 5
b1111 9
b11 *
b11 ,
b11 1
#40
0%
#45
b1110 #
b1110 -
b1110 :
1"
b1110 .
b1110 4
b1110 5
b1110 9
b1111 0
b1111 3
b1111 6
1%
#48
1!
b0 #
b0 -
b0 :
0"
b0 .
b0 4
b0 5
b0 9
b100 *
b100 ,
b100 1
#50
0%
#54
